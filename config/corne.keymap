/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

&mt {
    flavor = "balanced";
    tapping-term-ms = <180>;
};

/ {
    combos {
        compatible = "zmk,combos";

        quickESC {
            bindings = <&kp ESC>;
            key-positions = <37 40>;
        };

        ezcopy {
            bindings = <&copy>;
            key-positions = <2 3>;
        };

        ezpaste {
            bindings = <&paste>;
            key-positions = <14 15>;
        };

        ezcolon {
            bindings = <&kp COLON>;
            key-positions = <15 20>;
        };

        unformattedPaste {
            bindings = <&unformPaste>;
            key-positions = <37 13>;
        };
    };

    macros {
        copy: copy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp C>,
                <&macro_release>,
                <&kp LEFT_GUI>;

            label = "COPY";
        };

        paste: paste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp V>,
                <&macro_release>,
                <&kp LEFT_GUI>;

            label = "PASTE";
        };

        unformPaste: unformPaste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI &kp LEFT_ALT &kp LSHFT>,
                <&macro_tap>,
                <&kp V>,
                <&macro_release>,
                <&kp LEFT_GUI &kp LEFT_ALT &kp LSHFT>;

            label = "UNFORMPASTE";
        };
    };

    behaviors {
        taptog: taptog {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPTOG";
            bindings = <&mo>, <&tog>;

            #binding-cells = <2>;
            tapping-term-ms = <170>;
        };

        th: th {
            compatible = "zmk,behavior-hold-tap";
            label = "TH";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <180>;
        };

        tlwr: tlwr {
            compatible = "zmk,behavior-tap-dance";
            label = "TLWR";
            #binding-cells = <0>;
            bindings = <&none>, <&to 1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            label = "Base";
            bindings = <
&kp ESC        &kp Q        &kp W       &kp F               &kp P        &kp B          &kp K    &kp L            &kp U           &kp Y         &kp SEMI         &kp EXCL
&mt LSHFT TAB  &kp A        &kp R       &kp S               &kp T        &kp G          &kp M    &kp N            &kp E           &kp I         &kp O            &kp SQT
&kp DEL        &mt LCTRL Z  &mt LALT X  &mt LGUI C          &mt LSHFT D  &kp V          &kp J    &mt RSHFT H      &mt RGUI COMMA  &mt RALT DOT  &mt RCTRL SLASH  &kp RS(RALT)
                                        &th LGUI LG(SPACE)  &mo 1        &lt 2 SPACE    &kp RET  &lt 1 BACKSPACE  &taptog 2 2
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Lower";
            bindings = <
&kp COLON      &kp EXCL      &kp N7  &kp N8   &kp N9  &kp HASH     &kp CARET  &kp AMPS         &kp ASTRK      &kp LPAR       &kp RPAR        &kp BSLH
&kp LS(LALT)   &mt LGUI AT   &kp N4  &kp N5   &kp N6  &kp DLLR     &kp GRAVE  &kp MINUS        &kp EQUAL      &kp LBKT       &kp RBKT        &kp PIPE
&kp BACKSPACE  &mt LCTRL N0  &kp N1  &kt N2   &kp N3  &kp PRCNT    &kp TILDE  &mt UNDER RSHFT  &mt RGUI PLUS  &mt RALT LBRC  &mt RCTRL RBRC  &trans
                                     &kp DOT  &to 0   &kp SPACE    &kp RET    &trans           &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Raise";
            bindings = <
&kp LG(GRAVE)  &kp LA(N1)    &kp LA(N2)    &kp LA(N3)    &kp LA(N4)  &kp LA(N5)    &kp C_PREV        &kp C_NEXT     &kp C_PLAY_PAUSE  &kp C_VOL_DN              &kp C_VOL_UP  &kp C_MUTE
&kp LSHIFT     &kp LCTRL     &kp LALT      &kp LGUI      &mkp MB1    &mkp MB3      &kp LEFT          &kp DOWN       &kp UP            &kp RIGHT                 &kp HOME      &kp END
&bt BT_CLR     &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &mkp MB2    &trans        &kp LG(LS(LEFT))  &kp CAPS       &kp F12           &kp LG(LC(LS(NUMBER_4)))  &trans        &trans
                                           &kp LGUI      &to 0       &kp SPACE     &kp RSHFT         &kp BACKSPACE  &trans
            >;
        };
    };
};
